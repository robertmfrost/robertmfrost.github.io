{"version":3,"sources":["common/Image/Image.module.scss","common/Quote/Quote.module.scss","common/Container/index.jsx","common/Breadcrumbs/index.jsx","common/Image/index.jsx","common/Quote/index.jsx","pages/natural-law/index.jsx","pages/table-of-contents/index.jsx","pages/page-not-found/index.jsx","App.jsx","serviceWorker.js","index.js","common/Container/Container.module.scss"],"names":["module","exports","Container","children","grid","link","panel","container","className","classnames","styles","wrapper","to","Breadcrumbs","links","filter","indexOf","length","map","key","href","label","Image","cropped","height","src","width","picture","image","alt","style","Quote","quote","source","prototype","node","string","isRequired","NaturalLaw","TableOfContents","toc","item","lesson","title","PageNotFound","window","location","pathname","hash","replace","word","charAt","toUpperCase","substr","routes","App","exact","path","component","Object","keys","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,QAAU,yB,mBCA1FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,wB,+NCmCzCC,EA9BG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAEnCC,EAAY,kBAChB,yBAAKC,UAAWC,IACdC,IAAOH,UADiB,eAErBG,IAAON,KAAOA,GAFO,eAGrBM,IAAOJ,MAAQA,GAHM,eAIrBI,IAAOL,KAAOA,KAEhBF,IAIL,OACE,yBAAKK,UAAWC,IAAWC,IAAOC,UAC/BN,GACC,kBAAC,IAAD,CAAMO,GAAIP,GACPE,MAGHF,GAAQE,MCADM,EArBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,kBAAC,EAAD,KACGA,EAAMC,QAAO,SAAAV,GAAI,OAAIS,EAAME,QAAQX,GAAQS,EAAMG,OAAS,KAAGC,KAAI,SAAAb,GAAI,OACpE,0BAAMc,IAAKL,EAAME,QAAQX,IACvB,kBAAC,IAAD,CAAMO,GAAIP,EAAKe,MAAOf,EAAKgB,OAC3B,yCAGJ,8BAAOP,EAAMA,EAAMG,OAAS,GAAGI,S,iBCepBC,EAvBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,IAAKC,EAAzB,EAAyBA,MAAzB,OACZ,6BAASlB,UAAWC,IAAWC,IAAOiB,UACpC,yBACEnB,UAAWC,IACTC,IAAOkB,MADY,eAEhBlB,IAAOa,QAAUA,IAEtBM,IAAKJ,EACLA,IAAKA,EACLK,MAAO,CACLN,OAAQA,EACRE,MAAOA,O,wBCXTK,EAAQ,SAAC,GAAD,IAAG5B,EAAH,EAAGA,SAAUE,EAAb,EAAaA,KAAMoB,EAAnB,EAAmBA,IAAnB,OACZ,oCACE,yBAAKjB,UAAWC,IAAWC,IAAOsB,QAC/B7B,GAEH,yBAAKK,UAAWC,IAAWC,IAAOuB,SAC/BR,EACApB,GACC,oCACE,oCACA,uBAAGe,KAAMf,GAAT,QACA,uCAMV0B,EAAMG,UAAY,CAChB/B,SAAUgC,OACVV,IAAKW,SAAOC,YAGCN,QC0BAO,EA9CI,kBACjB,kBAAC,EAAD,KACE,kBAAC,EAAD,CACExB,MAAO,CACL,CACEM,KAAM,oBACNC,MAAO,qBAET,CACEA,MAAO,kBAIb,2CACA,kBAAC,EAAD,CAAWf,OAAK,GACd,kBAAC,EAAD,CACEmB,IAAI,+HACJF,SAAO,EACPC,OAAO,QACPE,MAAM,SAER,+SAIA,yNAC6L,kBAAC,IAAD,CAAMd,GAAG,+BAAT,eAD7L,wDAIA,kBAAC,EAAD,CACEa,IAAI,qEACJpB,KAAK,2DAFP,0ZAOA,4CACA,4BACE,4BAAI,yDAA8B,uCAA9B,IAAmD,4CAAnD,kCAAJ,uCACA,4BAAI,2DAAJ,wBAA6D,uBAAGe,KAAK,qDAAR,WAA7D,kDAAmL,uBAAGA,KAAK,uDAAR,mBAAnL,sGAAuW,uBAAGA,KAAK,kEAAR,kBAAvW,qFAAohB,uBAAGA,KAAK,0DAAR,eAAphB,mHACA,4BAAI,0CAAe,uCAAf,IAAoC,sCAApC,0DAAJ,yGAA4N,qCAA5N,4CAAkR,sCAAlR,wH,OCbOmB,EA9BS,WACtB,OACE,oCACE,kBAAC,EAAD,KACE,iDACA,6CAEF,kBAAC,EAAD,CAAWnC,MAAI,GACZoC,EAAI,gBAAgBtB,KAAI,SAAAuB,GAAI,OAC3B,kBAAC,EAAD,CAAWtB,IAAKqB,EAAI,gBAAgBxB,QAAQyB,GAAOnC,OAAK,EAACD,KAAI,WAAMoC,EAAKpC,OACtE,yCAAeoC,EAAKC,QACpB,2BAAID,EAAKE,YAIf,kBAAC,EAAD,KACE,4CAEF,kBAAC,EAAD,CAAWvC,MAAI,GACZoC,EAAG,YAAgBtB,KAAI,SAAAuB,GAAI,OAC1B,kBAAC,EAAD,CAAWtB,IAAKqB,EAAG,YAAgBxB,QAAQyB,GAAOnC,OAAK,EAACD,KAAI,WAAMoC,EAAKpC,OACrE,yCAAeoC,EAAKC,QACpB,2BAAID,EAAKE,cCINC,EA1BM,kBACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE9B,MAAO,CACL,CACEM,KAAM,oBACNC,MAAO,qBAET,CACEA,OAAQwB,OAAOC,SAASC,SAAWF,OAAOC,SAASE,MAChDC,QAAQ,MAAO,IACfA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,UAAU,SAAAC,GACjB,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,OAAO,UAK5D,8CACA,kBAAC,EAAD,CAAW/C,OAAK,GACd,iFChBAgD,EAAS,CACb,oBAAqBf,EACrB,cAAeD,GAiBFiB,MAdf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IAChCoB,OAAOC,KAAKN,GAAQpC,KAAI,SAAAuC,GAAI,OAC3B,kBAAC,IAAD,CAAOtC,IAAKsC,EAAMD,OAAK,EAACC,KAAI,WAAMA,GAAQC,UAAWJ,EAAOG,QAE9D,kBAAC,IAAD,CAAOC,UAAWd,OCVNiB,QACW,cAA7BhB,OAAOC,SAASgB,UAEe,UAA7BjB,OAAOC,SAASgB,UAEhBjB,OAAOC,SAASgB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5B9E,EAAOC,QAAU,CAAC,QAAU,2BAA2B,UAAY,6BAA6B,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,0B","file":"static/js/main.70c43ec8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"Image_picture__JhmXK\",\"image\":\"Image_image__10NQy\",\"cropped\":\"Image_cropped__10a9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"Quote_quote__1v8YU\",\"source\":\"Quote_source__3mzSc\"};","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport styles from './Container.module.scss';\n\nconst Container = ({ children, grid, link, panel }) => {\n\n  const container = () => (\n    <div className={classnames(\n      styles.container,\n      { [styles.grid]: grid },\n      { [styles.panel]: panel },\n      { [styles.link]: link },\n    )}>\n      {children}\n    </div>\n  );\n\n  return (\n    <div className={classnames(styles.wrapper)}>\n      {link && (\n        <Link to={link}>\n          {container()}\n        </Link>\n      )}\n      {!link && container()}\n    </div>\n  );\n};\nContainer.propTypes = {\n  children: node,\n  grid: bool, // causes the contents of the container to be laid out like a grid\n  panel: bool, // causes the container to visually look like a panel with a drop shadow\n};\n\nexport default Container;","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Container from '../Container';\n\nconst Breadcrumbs = ({ links }) => (\n  <Container>\n    {links.filter(link => links.indexOf(link) < links.length - 1).map(link => (\n      <span key={links.indexOf(link)}>\n        <Link to={link.href}>{link.label}</Link>\n        <span> / </span>\n      </span>\n    ))}\n    <span>{links[links.length - 1].label}</span>\n  </Container>\n);\n\nBreadcrumbs.propTypes = {\n  links: arrayOf(\n    shape({\n      label: string,\n      link: string,\n    }),\n  ).isRequired,\n};\n\nexport default Breadcrumbs;","import React from 'react';\nimport { bool, string } from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Image.module.scss';\n\nconst Image = ({ cropped, height, src, width }) => (\n  <picture className={classnames(styles.picture)}>\n    <img\n      className={classnames(\n        styles.image,\n        { [styles.cropped]: cropped }\n      )}\n      alt={src}\n      src={src}\n      style={{\n        height: height,\n        width: width,\n      }}\n    />\n  </picture>\n);\nImage.propTypes = {\n  cropped: bool,\n  height: string,\n  src: string.isRequired,\n  width: string,\n};\n\nexport default Image;","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Quote.module.scss';\n\nconst Quote = ({ children, link, src }) => (\n  <>\n    <div className={classnames(styles.quote)}>\n      {children}\n    </div>\n    <div className={classnames(styles.source)}>\n      {src}\n      {link && (\n        <>\n          <span> (</span>\n          <a href={link}>link</a>\n          <span>)</span>\n        </>\n      )}\n    </div>\n  </>\n);\nQuote.prototype = {\n  children: node,\n  src: string.isRequired,\n};\n\nexport default Quote;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '../../common/Container';\nimport Breadcrumbs from '../../common/Breadcrumbs';\nimport Image from '../../common/Image';\nimport Quote from '../../common/Quote';\n\nconst NaturalLaw = () => (\n  <Container>\n    <Breadcrumbs\n      links={[\n        {\n          href: \"table-of-contents\",\n          label: \"Table of Contents\"\n        },\n        {\n          label: \"Natural Law\"\n        },\n      ]}\n    />\n    <h1>Natural Law</h1>\n    <Container panel>\n      <Image\n        src=\"https://thewallpaper.co//wp-content/uploads/2017/10/nebula-hd-images-art-mobile-space-fresh-stars-high-resolution-planet.jpg\"\n        cropped\n        height=\"10rem\"\n        width=\"100%\"\n      />\n      <p>\n        Natural law is a description of the mechanics which govern existence. Everything exists by way of natural law, and nothing can exist except done by way of natural law. A true understanding of natural law helps us to better understand our past, our present, and our future.\n      </p>\n\n      <p>\n        Natural law, within and of itself, is neither good nor evil. It simply is. Good and evil are a result of agency (free will and choice), a topic that will be covered in more detail in the <Link to=\"natural-law-of-intelligence\">next lesson</Link>. Agency (and its consequences) rely on natural law.\n      </p>\n\n      <Quote\n        src=\"JSP, Journals Vol. 2:403–405, Appendix 2, 1–4 April 1843\"\n        link=\"http://scriptures.info/scriptures/tc/glossary/blessings\"\n      >\n        And if a person gains more knowledge and intelligence in this life through his diligence and obedience than another, he will have so much the advantage in the world to come. There is a law, irrevocably decreed in Heaven before the foundations of this world, upon which all blessings are predicated — and when we obtain any blessing from God, it is by obedience to that law upon which it is predicated.\n      </Quote>\n\n      <p>To emphasize:</p>\n      <ul>\n        <li><em>\"...it is by obedience to <strike>God</strike> <strong>that law</strong> upon which it is predicated.\"</em> - Notice what the obedience is to.</li>\n        <li><em>\"...irrevocably decreed...\"</em> - God makes several <a href=\"http://scriptures.info/Scriptures/Search?q=decree\">decrees</a> throughout scripture, some of which states He <a href=\"http://scriptures.info/scriptures/tc/section/48.4#4\">will not revoke</a> the decree (perhaps implying that He can, but won't), but this quote from Joseph Smith Jr. is the <a href=\"http://scriptures.info/Scriptures/Search?q=irrevocably+decreed\">only reference</a> of any decree which is irrevocable (or done irrevocably). Other uses of the term <a href=\"http://scriptures.info/Scriptures/Search?q=irrevocable\">irrevocable</a> seem to be in connection to natural law and/or God's declaration (decree, perhaps explanation) of natural law.</li>\n        <li><em>\"... There <strike>was</strike> <strong>is</strong> a law ... upon which all blessings are predicated...\"</em> - The law is currently active. It is present tense. It is that same law which was decreed \"in Heaven <u>before</u> the fondations of this world\". The word <em>before</em> could be understood as \"during a period of time preceding (a particular event, date, or time) or \"in front of\".</li>\n      </ul>\n    </Container>\n  </Container>\n);\n\nexport default NaturalLaw;","import React from 'react';\nimport Container from '../../common/Container';\nimport toc from './toc.json';\n\nconst TableOfContents = () => {\n  return (\n    <>\n      <Container>\n        <h1>Table of Contents</h1>\n        <h2>Natural Laws</h2>\n      </Container>\n      <Container grid>\n        {toc['natural-laws'].map(item => (\n          <Container key={toc['natural-laws'].indexOf(item)} panel link={`/${item.link}`}>\n            <small>Lesson {item.lesson}</small>\n            <p>{item.title}</p>\n          </Container>\n        ))}\n      </Container>\n      <Container>\n        <h2>Mathematics</h2>\n      </Container>\n      <Container grid>\n        {toc['mathematics'].map(item => (\n          <Container key={toc['mathematics'].indexOf(item)} panel link={`/${item.link}`}>\n            <small>Lesson {item.lesson}</small>\n            <p>{item.title}</p>\n          </Container>\n        ))}\n      </Container>\n    </>\n  );\n};\n\nexport default TableOfContents;","import React from 'react';\nimport Container from '../../common/Container';\nimport Breadcrumbs from '../../common/Breadcrumbs';\n\nconst PageNotFound = () => (\n  <Container>\n    <Breadcrumbs\n      links={[\n        {\n          href: \"table-of-contents\",\n          label: \"Table of Contents\"\n        },\n        {\n          label: (window.location.pathname + window.location.hash)\n            .replace(/\\//g, '')\n            .replace(/#/g, ' ')\n            .replace(/-/g, ' ')\n            .replace(/\\w\\S*/g, word => {\n              return word.charAt(0).toUpperCase() + word.substr(1);\n            }),\n        },\n      ]}\n    />\n    <h1>Page Not Found</h1>\n    <Container panel>\n      <p>We couldn't find the page you were looking for.</p>\n    </Container>\n  </Container>\n);\n\nexport default PageNotFound;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n// Routes\nimport NaturalLaw from './pages/natural-law';\nimport TableOfContents from './pages/table-of-contents';\nimport PageNotFound from './pages/page-not-found';\n\nconst routes = {\n  \"table-of-contents\": TableOfContents,\n  \"natural-law\": NaturalLaw,\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={TableOfContents} />\n        {Object.keys(routes).map(path => (\n          <Route key={path} exact path={`/${path}`} component={routes[path]} />\n        ))}\n        <Route component={PageNotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__3VFtF\",\"container\":\"Container_container__BFZld\",\"panel\":\"Container_panel__21TpM\",\"grid\":\"Container_grid__Zhpey\",\"link\":\"Container_link__22HuU\"};"],"sourceRoot":""}